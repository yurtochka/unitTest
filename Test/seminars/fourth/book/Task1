  1)  Почему использование тестовых заглушек может быть полезным при написании модульных тестов? 
  * * Заглушки могут заменить реальные зависимости модуля и позволить тестировать его изолированно.
  * * Данное решение увеличивает скорость и надежность тестов, так как реальное подключение к внешним ресурсам не требуется.

  2) Какой тип тестовой заглушки следует использовать, если вам нужно проверить, что метод был вызван с определенными аргументами?
  * * mocks - вместо реальных компонентов системы используются их имитационные заместители. 
  * * При использование mock можно проверить, что метод был вызван с аргументами, если их задать.

  3) Какой тип тестовой заглушки следует использовать, если вам просто нужно вернуть определенное значение или исключение в ответ на вызов метода?
  * * Stub — популярный вид тестовых заглушек. Предоставляет готовый ответ на вызовы, возвращая предопределённое значение. 
  * * Имитируюет поведение программных компонентов, от которых зависит модуль, проходящий тестирование.

  4) Какой тип тестовой заглушки вы бы использовали для имитации взаимодействия с внешним API или базой данных?
  * * Fake — тестовая заглушка, наиболее подходит для работы с внешними сервисами. 
  * * Fake представляет из себя упрощенный вариант настоящего сервиса, который работает полностью предсказуемо, 
  * * локально, дает полный доступ к данным и настройкам, а также не требует никакой дополнительной работы в каждом тесте. 
