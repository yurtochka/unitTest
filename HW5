  Задание 1. Представьте, что вы работаете над разработкой простого приложения для записной книжки, которое позволяет пользователям добавлять, редактировать и удалять контакты.
    Ваша задача - придумать как можно больше различных тестов (юнит-тесты, интеграционные тесты, сквозные тесты) для этого приложения. Напишите название каждого теста, 
    его тип и краткое описание того, что этот тест проверяет.

    Unit testing:
      testAddContacts - проверка на корректность добавления нового контакта с его данными;
      testShowAllContacts - тест проверяет правильность вывода(возврата) всего списка контактов;
      testChangeContacts - проверка на правильность редактирования данных контакта;
      testDeleteContacts - тест показывает, корректно ли мы удалили контакт;
      testGetPhoneContact - проверяет, что метод возвращает контакт с заданным номером телефона.

    Integration testing:
      testRestoringContacts - тест на корректные восстановления всех данных в методе, после использования функции отмены сохранения внесенных изменений в списке контактов;
      testSortContacts - проверяет правильно ли метод сортирует список контактов (отсортированы ли они по алфавиту);
      testChangeDataContact - тест на проверку изменения контакта, взаимодействие между методами редактирования, сохранения контакта.

    End-to-end (E2E, Chain testing):
      testE2EAddMultContacts - тест на добавление через интерфейс несколько контактов в записную книжку без ошибок. 
      testE2ESearchContact - проверка правильности вывода искомого контакта, после ввода данных в "edit" окна интерфейса;
      testE2EAddChangeDeleteContacts - проверка полного цикла работы с контактом (добавление, изменение, удаление). Проверка на корректность всех манипуляций и что он отрабатывает без ошибок.

  Задание 2. Ниже список тестовых сценариев. Ваша задача - определить тип каждого теста (юнит-тест, интеграционный тест, сквозной тест) и объяснить, почему вы так решили.
    1) Проверка того, что функция addContact корректно добавляет новый контакт в список контактов:
      Unit testing - так как идет проверка корректности добавления нового контакта в список в рамках одного модуля. Он изолирован и может быть запущен независимо;
    2) Проверка того, что при добавлении контакта через пользовательский интерфейс, контакт корректно отображается в списке контактов:
      Integration testing - данный функционал проверяет правильно ли взаимодействует функционал в рамках нескольких модулей. 
        В данном случае между пользовательским интерфейсом и внутренним функционалом приложения (список контактов);
    3) Проверка полного цикла работы с контактом: создание контакта, его редактирование и последующее удаление:
      End-to-end (E2E, Chain testing) - данный тест проверяет все модули приложения на корректность. Проверяет всю систему, как компоненты, т.е. создание, изменение и удаление, так и их взаимодействие с интерфейсом.

    
